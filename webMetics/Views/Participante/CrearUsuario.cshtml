@model webMetics.Models.ParticipanteModel
@using webMetics.Controllers
@{
    ViewBag.Title = "Formulario De Usuario";
}

<!DOCTYPE html>
<html>
<head>
</head>
<body>
    @if (ViewBag.Id == "")
    {
        if (ViewBag.Message != null)
        {
            if (ViewBag.ExitoAlCrear != null)
            {
                <div class="alert-success">
                    <h3> @ViewBag.Message </h3>
                </div>
            }
            else
            {
                <div class="alert-danger">
                    <h3> @ViewBag.Message </h3>
                </div>
            }
        }

        using (Html.BeginForm("CrearUsuario", "Participante", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <h1>Crear participante</h1>
                <h5>Inserte los siguientes datos</h5>
                <hr />
                <div class="row" style="margin-bottom:10%">
                    <div class="col">
                        <div class="container">
                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.nombre, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.TextBoxFor(participanteModel => participanteModel.nombre, new { @class = "form-control", @maxlength = "80", @autocomplete = "off" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.nombre, "", new { @class = "text-danger" })
                            </div>
                            <div class="row" style="margin-top:5px">
                                <div class="col">
                                    @Html.LabelFor(participanteModel => participanteModel.apellido_1, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                    @Html.TextBoxFor(participanteModel => participanteModel.apellido_1, new { @class = "form-control", @maxlength = "80", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(participanteModel => participanteModel.apellido_1, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    @Html.LabelFor(participanteModel => participanteModel.apellido_2, new { Style = "font-size:22px" })
                                    @Html.TextBoxFor(participanteModel => participanteModel.apellido_2, new { @class = "form-control", @maxlength = "80", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(participanteModel => participanteModel.apellido_2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.correo, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.TextBoxFor(participanteModel => participanteModel.correo, new { @class = "form-control", @maxlength = "80", @autocomplete = "off" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.correo, "", new { @class = "text-danger" })
                            </div>
                            <div class="row" style="margin-top:5px">
                                <div class="col">
                                    @Html.LabelFor(participanteModel => participanteModel.tipoIdentificacion, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                    @Html.DropDownListFor(participanteModel => participanteModel.tipoIdentificacion, new SelectList(Enum.GetValues(typeof(webMetics.Models.TipoIdentificacion))), "Seleccione el tipo de identificación", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(participanteModel => participanteModel.tipoIdentificacion, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    @Html.LabelFor(participanteModel => participanteModel.idParticipante, new { Style = "font-size:22px" })<a style="color:red;font-size:22px">*</a>
                                    @Html.TextBoxFor(participanteModel => participanteModel.idParticipante, new { @class = "form-control", @maxlength = "15", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(participanteModel => participanteModel.idParticipante, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.unidadAcademica, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.TextBoxFor(participanteModel => participanteModel.unidadAcademica, new { @class = "form-control", @maxlength = "80", @autocomplete = "off" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.unidadAcademica, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.tipoParticipante, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.DropDownListFor(participanteModel => participanteModel.tipoParticipante, new SelectList(Enum.GetValues(typeof(webMetics.Models.TipoDeParticipantes))), "Seleccione el tipo al que pertenece", new { @class = "form-control" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.tipoParticipante, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.area, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.DropDownListFor(participanteModel => participanteModel.area, new SelectList(ViewData["jsonDataAreas"] as List<string>), "Elija un area...", new { @class = "form-control", id = "areaDropdown" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.area, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.departamento, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.DropDownListFor(participanteModel => participanteModel.departamento, new SelectList(Enumerable.Empty<SelectListItem>()), "Elija un departamento...", new { @class = "form-control", id = "departamentoDropdown" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.departamento, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.seccion, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.DropDownListFor(participanteModel => participanteModel.seccion, new SelectList(Enumerable.Empty<SelectListItem>()), "Elija una seccion...", new { @class = "form-control", id = "seccionDropdown" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.seccion, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.telefonos, new { Style = "font-size:22px" })  <a style="color:red;font-size:22px">*</a>
                                @Html.TextBoxFor(participanteModel => participanteModel.telefonos, new { @class = "form-control", @maxlength = "12", @minlength = "7", @autocomplete = "off" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.telefonos, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(participanteModel => participanteModel.condicion, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.TextBoxFor(participanteModel => participanteModel.condicion, new { @class = "form-control", @maxlength = "30", @autocomplete = "off" })
                                @Html.ValidationMessageFor(participanteModel => participanteModel.condicion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row justify-content-center m-4">
                            <div class="col-auto">
                                @Html.ActionLink("Cancelar", "Index", "Home", new { }, new { @class = "btn btn-secondary btn-block", @style = "background-color:grey" })
                            </div>
                            <div class="col-auto">
                                <input type="submit" class="btn btn-primary btn-block" value="Guardar" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        @Html.Raw("window.location.href = '" + Url.Action("ListaGruposDisponibles", "Grupo") + "';")
    }
</body>
</html>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        // Handle change event of area dropdown
        $('#areaDropdown').change(function () {
            var areaName = $(this).val();

            // Clear departamento and seccion dropdowns
            $('#departamentoDropdown').empty().append('<option value="">Elija un departamento...</option>');
            $('#seccionDropdown').empty().append('<option value="">Elija una seccion...</option>');

            if (areaName !== '') {
                // Make AJAX request to fetch departamentos for selected area
                $.ajax({
                    url: '/Participante/GetDepartamentosByArea',
                    type: 'GET',
                    data: { areaName: areaName },
                    dataType: 'json',
                    success: function (data) {
                        // Update departamento dropdown with fetched data
                        $.each(data, function (index, value) {
                            $('#departamentoDropdown').append('<option value="' + value + '">' + value + '</option>');
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while fetching departamentos: ' + error
                        });
                    }
                });
                // Make AJAX request to fetch secciones for selected departamento
                $.ajax({
                    url: '/Participante/GetSeccionesByDepartamento',
                    type: 'GET',
                    data: { departamentoName: departamentoName },
                    dataType: 'json',
                    success: function (data) {
                        // Update seccion dropdown with fetched data
                        $.each(data, function (index, value) {
                            $('#seccionDropdown').append('<option value="' + value + '">' + value + '</option>');
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while fetching secciones: ' + error
                        });
                    }
                });
            }
        });

        // Handle change event of departamento dropdown
        $('#departamentoDropdown').change(function () {
            var departamentoName = $(this).val();
            var areaName = $('#areaDropdown').val();

            // Clear seccion dropdown
            $('#seccionDropdown').empty().append('<option value="">Elija una seccion...</option>');

            if (departamentoName !== '') {
                // Make AJAX request to fetch secciones for selected departamento
                $.ajax({
                    url: '/Participante/GetSeccionesByDepartamento',
                    type: 'GET',
                    data: { areaName: areaName, departamentoName: departamentoName },
                    dataType: 'json',
                    success: function (data) {
                        // Update seccion dropdown with fetched data
                        $.each(data, function (index, value) {
                            $('#seccionDropdown').append('<option value="' + value + '">' + value + '</option>');
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while fetching secciones: ' + error
                        });
                    }
                });
            }
        });
    });
</script>