@model webMetics.Models.GrupoModel
@using webMetics.Controllers
@{
    ViewBag.Title = "Editar Módulo";

    var urlReferrer = Context.Request.Headers["Referer"].FirstOrDefault();
}

@if (ViewBag.Id != "" && (ViewBag.Role == 1 || ViewBag.Role == 2))
{
    <div class="contenedor-tipos-actividades container-fluid">
        @if (urlReferrer != null)
        {
            <div class="d-flex justify-content-start mb-3">
                <a class="text-dark fs-4" onclick="history.go(-1); return false;" href="#">
                    <i class="bi bi-arrow-left"></i>
                </a>
            </div>
        }

        @using (Html.BeginForm("EditarGrupo", "Grupo", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <h1>@ViewBag.Title</h1>
            <hr />

            if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-dark alert-dismissible fade show mx-2" role="alert">
                    <span>@ViewBag.ErrorMessage</span>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            if (ViewBag.SuccessMessage != null)
            {
                <div class="alert alert-success alert-dismissible fade show mx-2" role="alert">
                    <span>@ViewBag.SuccessMessage</span>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row mb-1">
                <div class="col">
                    <div class="container">
                        <div class="form-group mt-1">
                            @Html.HiddenFor(grupoModel => grupoModel.idGrupo, new { })
                            @Html.HiddenFor(grupoModel => grupoModel.cupoActual, new { })
                            @Html.HiddenFor(grupoModel => grupoModel.esVisible, new { })

                            @Html.LabelFor(grupoModel => grupoModel.nombre, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                            @Html.TextBoxFor(grupoModel => grupoModel.nombre, new { @class = "form-control", @maxlength = "80", @autocomplete = "off" })
                            @Html.ValidationMessageFor(grupoModel => grupoModel.nombre, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mt-1">
                            @Html.LabelFor(grupoModel => grupoModel.descripcion, new { Style = "font-size:22px" })
                            @Html.TextAreaFor(grupoModel => grupoModel.descripcion, new { @class = "form-control", @rows = "3", @maxlength = "300", @autocomplete = "off" })
                            @Html.ValidationMessageFor(grupoModel => grupoModel.descripcion, "", new { @class = "text-danger" })
                        </div>
                        <div class="row mt-1">
                            <div class="col">
                                @Html.LabelFor(grupoModel => grupoModel.modalidad, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.DropDownListFor(grupoModel => grupoModel.modalidad, new SelectList(Enum.GetValues(typeof(webMetics.Models.TipoModalidad))), "Seleccione un tipo de modalidad...", new { @class = "form-control", @id = "modalidadSelect" })
                                @Html.ValidationMessageFor(grupoModel => grupoModel.modalidad, "", new { @class = "text-danger" })
                            </div>

                            <div class="col">
                                @Html.LabelFor(grupoModel => grupoModel.cantidadHoras, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.TextBoxFor(grupoModel => grupoModel.cantidadHoras, new { @type = "number", @class = "form-control", @value = "" })
                                @Html.ValidationMessageFor(grupoModel => grupoModel.cantidadHoras, "", new { @class = "text-danger" })
                            </div>

                            <div class="col">
                                @Html.LabelFor(grupoModel => grupoModel.cupo, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                                @Html.TextBoxFor(grupoModel => grupoModel.cupo, new { @type = "number", @class = "form-control", @value = "" })
                                @Html.ValidationMessageFor(grupoModel => grupoModel.cupo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group mt-1">
                            @Html.LabelFor(grupoModel => grupoModel.lugar, new { Style = "font-size:22px" })
                            @Html.TextBoxFor(grupoModel => grupoModel.lugar, new { @class = "form-control", @maxlength = "256", @autocomplete = "off", @id = "lugarText" })
                            @Html.ValidationMessageFor(grupoModel => grupoModel.lugar, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(grupoModel => grupoModel.horario, new { Style = "font-size:22px" })
                            @Html.TextBoxFor(grupoModel => grupoModel.horario, new { @placeholder = "Ejemplo: L - V de 7am a 9am", @class = "form-control", @maxlength = "200", @autocomplete = "off", @id = "horarioText" })
                            @Html.ValidationMessageFor(grupoModel => grupoModel.horario, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(grupoModel => grupoModel.nombreTema, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                            @Html.DropDownListFor(grupoModel => grupoModel.idTema, ViewData["Temas"] as List<SelectListItem>, "Seleccione un tema...", new { @class = "form-select" })
                            @Html.ValidationMessageFor(grupoModel => grupoModel.nombreTema, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(grupoModel => grupoModel.nombreCategoria, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                            @Html.DropDownListFor(grupoModel => grupoModel.idCategoria, ViewData["Categorias"] as List<SelectListItem>, "Seleccione una categoría...", new { @class = "form-select" })
                            @Html.ValidationMessageFor(grupoModel => grupoModel.nombreCategoria, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(grupoModel => grupoModel.nombreAsesorAsociado, new { Style = "font-size:22px" })
                            @Html.DropDownListFor(grupoModel => grupoModel.nombreAsesorAsociado, ViewData["Asesores"] as List<SelectListItem>, "Seleccione un asesor...", new { @class = "form-select", @id = "asesorSelect" })
                            @Html.ValidationMessageFor(grupoModel => grupoModel.nombreAsesorAsociado, "", new { @class = "text-danger" })
                        </div>

                        <br />
                        <div class="row mt-3">
                            <h4>Fechas de inscripción</h4>
                            <div class="col">
                                @Html.LabelFor(grupoModel => grupoModel.fechaInicioInscripcion)
                                <br />
                                @Html.EditorFor(grupoModel => grupoModel.fechaInicioInscripcion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(grupoModel => grupoModel.fechaInicioInscripcion, "", new { @class = "text-danger" })

                            </div>
                            <div class="col">
                                @Html.LabelFor(grupoModel => grupoModel.fechaFinalizacionInscripcion)
                                <br />
                                @Html.EditorFor(grupoModel => grupoModel.fechaFinalizacionInscripcion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(grupoModel => grupoModel.fechaFinalizacionInscripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mt-3">
                            <h4>Fecha de inicio y fin del grupo</h4>
                            <div class="col">
                                @Html.LabelFor(grupoModel => grupoModel.fechaInicioGrupo)
                                <br />
                                @Html.EditorFor(grupoModel => grupoModel.fechaInicioGrupo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(grupoModel => grupoModel.fechaInicioGrupo, "", new { @class = "text-danger" })
                            </div>
                            <div class="col">
                                @Html.LabelFor(grupoModel => grupoModel.fechaFinalizacionGrupo)
                                <br />
                                @Html.EditorFor(grupoModel => grupoModel.fechaFinalizacionGrupo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(grupoModel => grupoModel.fechaFinalizacionGrupo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mt-3">
                            <h4>Adjuntar archivo del módulo</h4>
                            <div class="form-group">
                                @Html.TextBoxFor(grupoModel => grupoModel.archivoAdjunto, null, new { type = "file", @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="row justify-content-center m-4">
                        <div class="col-auto">
                            @Html.ActionLink("Cancelar", "ListaGruposDisponibles", "Grupo", new { }, new { @class = "btn btn-secondary btn-block" })
                        </div>
                        <div class="col-auto">
                            <input type="submit" class="btn btn-primary btn-block" value="Guardar" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    await Html.RenderPartialAsync("~/Views/Usuario/IniciarSesion.cshtml");
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        function verificarModalidad() {
            var modalidadSeleccionada = $('#modalidadSelect').val();
            if (modalidadSeleccionada === '@webMetics.Models.TipoModalidad.Autogestionado') {
                $('#asesorSelect').prop('disabled', true);
                $('#asesorSelect').val('');
                $('#horarioText').prop('disabled', true);
                $('#horarioText').val('');
                $('#lugarText').prop('disabled', true);
                $('#lugarText').val('');
            } else {
                $('#asesorSelect').prop('disabled', false);
                $('#horarioText').prop('disabled', false);
                $('#lugarText').prop('disabled', false);
            }
        }

        verificarModalidad();

        // Llamar a la función cuando cambie la modalidad
        $('#modalidadSelect').change(function () {
            verificarModalidad();
        });
    });
</script>