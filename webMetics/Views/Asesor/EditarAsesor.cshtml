@model webMetics.Models.AsesorModel
@using webMetics.Controllers
<!--
    Vista del formulario para editar los datos de un asesor
-->

@{
    ViewBag.Title = "Editar asesor";

    var urlReferrer = Context.Request.Headers["Referer"].FirstOrDefault();
}

@if (ViewBag.Id != "" && ViewBag.Role == 1)
{
    <div class="contenedor-tipos-actividades container-fluid">
        @if (urlReferrer != null)
        {
            <div class="d-flex justify-content-start mb-3">
                <a class="text-dark fs-4" onclick="history.go(-1); return false;" href="#">
                    <i class="bi bi-arrow-left"></i>
                </a>
            </div>
        }

        @using (Html.BeginForm("ActualizarAsesor", "Asesor", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <h1>@ViewBag.Title</h1>
            <hr />

            @if (ViewBag.Message != null)
            {
                if (ViewBag.ExitoAlCrear != null)
                {
                    <div class="alert alert-success alert-dismissible fade show mt-4" role="alert">
                        @ViewBag.Message
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                else
                {
                    <div class="alert alert-dark alert-dismissible fade show mt-4" role="alert">
                        @ViewBag.Message
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
            }

            if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-dark alert-dismissible fade show mx-2" role="alert">
                    <span>@ViewBag.ErrorMessage</span>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            if (ViewBag.SuccessMessage != null)
            {
                <div class="alert alert-success alert-dismissible fade show mx-2" role="alert">
                    <span>@ViewBag.SuccessMessage</span>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row mb-1">
                <div class="col">
                    <div class="container">
                        <div class="form-group mt-1">
                            @Html.LabelFor(asesorModel => asesorModel.nombre, new { Style = "font-size:22px" })  <a style="color:red;font-size:22px">*</a>
                            @Html.TextBoxFor(asesorModel => asesorModel.nombre, new { @class = "form-control", @maxlength = "64", @autocomplete = "off" })
                            @Html.ValidationMessageFor(asesorModel => asesorModel.nombre, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(asesorModel => asesorModel.primerApellido, new { Style = "font-size:22px" })  <a style="color:red;font-size:22px">*</a>
                            @Html.TextBoxFor(asesorModel => asesorModel.primerApellido, new { @class = "form-control", @maxlength = "64", @autocomplete = "off" })
                            @Html.ValidationMessageFor(asesorModel => asesorModel.primerApellido, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(asesorModel => asesorModel.segundoApellido, new { Style = "font-size:22px" })
                            @Html.TextBoxFor(asesorModel => asesorModel.segundoApellido, new { @class = "form-control", @maxlength = "64", @autocomplete = "off" })
                            @Html.ValidationMessageFor(asesorModel => asesorModel.segundoApellido, "", new { @class = "text-danger", @maxlength = "64" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(asesorModel => asesorModel.correo, new { Style = "font-size:22px" })  <a style="color:red;font-size:22px">*</a>
                            @Html.TextBoxFor(asesorModel => asesorModel.correo, new { @class = "form-control", @maxlength = "64", @autocomplete = "off" })
                            @Html.ValidationMessageFor(asesorModel => asesorModel.correo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(asesorModel => asesorModel.temaAsociado, new { Style = "font-size:22px" })  <a style="color:red;font-size:22px">*</a>
                            @Html.DropDownList("temaAsociado", ViewData["Temas"] as List<SelectListItem>, "Seleccione un tema asociado...", new { @class = "form-select", @autocomplete = "off" })
                            @Html.ValidationMessageFor(asesorModel => asesorModel.temaAsociado, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(asesorModel => asesorModel.asistentesAsociados, new { Style = "font-size:22px" })  <a style="color:red;font-size:22px">*</a>
                            @Html.TextBoxFor(asesorModel => asesorModel.asistentesAsociados, new { @class = "form-control", @autocomplete = "off" })
                            @Html.ValidationMessageFor(asesorModel => asesorModel.asistentesAsociados, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(asesorModel => asesorModel.telefono, new { Style = "font-size:22px" })  <a style="color:red;font-size:22px">*</a>
                            @Html.TextBoxFor(asesorModel => asesorModel.telefono, new { @class = "form-control", @maxlength = "12", @minlength = "7", @autocomplete = "off" })
                            @Html.ValidationMessageFor(asesorModel => asesorModel.telefono, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-1">
                            @Html.LabelFor(asesorModel => asesorModel.descripcion, new { Style = "font-size:22px" }) <a style="color:red;font-size:22px">*</a>
                            @Html.TextAreaFor(asesorModel => asesorModel.descripcion, new { @class = "form-control", @rows = "3", @maxlength = "256" })
                            @Html.ValidationMessageFor(asesorModel => asesorModel.descripcion, "", new { @class = "text-danger" })

                        </div>
                        <div class="row justify-content-center m-4">
                            <div class="col-auto">
                                <a href="#" class="btn btn-secondary btn-block" onclick="history.go(-1); return false;">Cancelar</a>
                            </div>
                            <div class="col-auto">
                                <input type="submit" class="btn btn-primary btn-block" value="Guardar" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    await Html.RenderPartialAsync("~/Views/Usuario/IniciarSesion.cshtml");
}